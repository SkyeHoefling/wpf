<Project>
  <PropertyGroup>

    <!-- These assemblies need to be compared against the equivalent .NET Framework 4.8 assemblies. -->
    <Net48CompatNeededAssemblies>
      PresentationBuildTasks;
      PresentationCore;
      PresentationCore-CommonResources;
      PresentationFramework;
      PresentationFramework.Aero;
      PresentationFramework.Aero2;
      PresentationFramework.AeroLite;
      PresentationFramework.Classic;
      PresentationFramework.Luna;
      PresentationFramework.Royale;
      PresentationFramework-SystemCore;
      PresentationFramework-SystemData;
      PresentationFramework-SystemDrawing;
      PresentationFramework-SystemXml;
      PresentationFramework-SystemXmlLinq;
      PresentationUI;
      ReachFramework;
      UIAutomationClient;
      UIAutomationClientSideProviders;
      UIAutomationProvider;
      UIAutomationTypes;
      System.Printing;
      System.Windows.Controls.Ribbon;
      System.Windows.Input.Manipulations;
      System.Windows.Presentation;
      System.Xaml;
      WindowsBase;
      WindowsFormsIntegration;
    </Net48CompatNeededAssemblies>

    <!-- TODO:  Figure out if we can enable this with reverse API Compat.  Attempts to enable this via regular API Compat seem
         very noisy.  I'm not convinced that is the correct solution.  We may have to do some work to override reverse compat props
         or, in the worst case, craft a custom baseline for this class. -->
    <!-- 
      These assemblies need their ref assemblies compared against their lib assemblies.
      This is because they have hand-crafted reference assemblies whose public surface area must be kept in sync
      with their lib counterparts.
    -->
    <!--<ReferenceCompatNeededAssemblies>
      System.Printing;
    </ReferenceCompatNeededAssemblies>-->

    <!-- TODO: Can we use this to validate cycle breakers against the assemblies they break for? -->
  </PropertyGroup>

  <!-- Only enable API Compat when needed for some building assembly -->
  <PropertyGroup Condition="'$(RunNetFrameworkApiCompat)'==''">
    <RunNetFrameworkApiCompat>false</RunNetFrameworkApiCompat>
    <RunNetFrameworkApiCompat Condition="$(Net48CompatNeededAssemblies.Contains('$(AssemblyName)'))">true</RunNetFrameworkApiCompat>
  </PropertyGroup>

  <PropertyGroup Condition="'$(RunReferenceApiCompat)'==''">
    <RunReferenceApiCompat>false</RunReferenceApiCompat>
    <RunReferenceApiCompat Condition="$(ReferenceCompatNeededAssemblies.Contains('$(AssemblyName)'))
                                      and $(MSBuildProjectName.Contains('$(AssemblyName)-ref'))">true</RunReferenceApiCompat>
  </PropertyGroup>

  <PropertyGroup Condition="'$(RunApiCompat)'==''">
    <RunApiCompat>false</RunApiCompat>
    <RunApiCompat Condition="'$(RunNetFrameworkApiCompat)'=='true' or '$(RunReferenceApiCompat)'=='true'">true</RunApiCompat>
  </PropertyGroup>

</Project>
